#!/usr/bin/env node
var p=require("http");function _(){let e=["AZURE_API_ENDPOINT","AZURE_API_VERSION","AZURE_API_KEY"].filter(n=>!process.env[n]);if(e.length>0)throw new Error(`Missing required environment variables: ${e.join(", ")}`)}_();var O=process.env.AZURE_API_ENDPOINT,h=process.env.AZURE_API_VERSION,g=process.env.AZURE_API_KEY,c=parseInt(process.env.PROXY_PORT||"8000",10),v=(0,p.createServer)(async(t,e)=>{if(t.method==="POST"&&t.url==="/chat/completions"){let n="";t.on("data",r=>{n+=r.toString()}),t.on("end",async()=>{try{let r=JSON.parse(n),m=I(r),u=`${O}/chat/completions?api-version=${h}`,i=await fetch(u,{method:"POST",headers:{"Content-Type":"application/json","api-key":g,Accept:"text/event-stream","User-Agent":"Zed/0.178.5"},body:JSON.stringify(m)});if(!i.ok){e.writeHead(502,{"Content-Type":"text/plain"}),e.end(`Error communicating with Azure OpenAI: ${i.statusText}`);return}e.writeHead(200,{"Content-Type":"text/event-stream","Cache-Control":"no-cache"});let d=i.body.getReader(),s="";for(;;){let{done:l,value:E}=await d.read();if(l)break;let A=new TextDecoder().decode(E).trim();s+=A;let f=s.split(`
`);s="";for(let o of f){if(o.trim()==="")continue;if(o==="data: [DONE]"){e.write(`data: [DONE]
`);continue}if(!o.startsWith("data: ")){s+=o+`
`;continue}let y=o.slice(6).trim();try{let a=JSON.parse(y);if(!a.choices||!Array.isArray(a.choices))continue;e.write(`data: ${JSON.stringify(a)}
`)}catch{s+=o+`
`}}}e.write(`data: [DONE]
`),e.end()}catch(r){console.error("Error in proxy:",r),e.writeHead(500,{"Content-Type":"text/plain"}),e.end("Internal Server Error in Proxy")}})}else e.writeHead(404,{"Content-Type":"text/plain"}),e.end("Not Found")});function I(t){let e={role:"system",content:"You must always respond in markdown format."};if(t.prompt)return{messages:[e,{role:"user",content:t.prompt}],temperature:t.temperature??.7,max_tokens:Math.min(t.max_tokens??4096,4096),stream:!0};let n={...t,stream:!0};return n.messages?n.messages=[e,...n.messages]:n.messages=[e],n}v.listen(c,()=>{console.log(`Azure OpenAI proxy server running on port ${c}`)});
